?read.csv
read.csv('activity.csv')
table <- read.csv('activity.csv')
View(table)
?read.csv
table <- read.csv('activity.csv', na.strings = "NA", colClasses=('numeric','character','numeric'))
table <- read.csv('activity.csv', na.strings = "NA", colClasses = c('numeric','character','numeric'))
View(table)
?as.Date
data <- read.csv('./activity.csv', na.strings = 'NA',
colClasses = c('numeric','character','numeric'))
data$date <- as.Date(data$date, '%Y-%m-%d')
?tapply
tapply(data$steps, data$date, sum)
tapply(data$steps, data$date, sum, na.rm=TRUE)
totSteps <- tapply(data$steps, data$date, sum, na.rm=TRUE)
totSteps <- tapply(data$steps, data$date, sum, na.rm=TRUE)
?tapply
?histogram
?hist
library(graphics)
hist(totSteps)
?hist
mean(totSteps)
median(totSteps)
totSteps <- tapply(data$steps, data$date, sum)
mean(totSteps)
median(totSteps)
totSteps
totSteps[1]
totSteps[2]
totSteps[3]
totSteps[4]
totSteps[5]
totSteps[6]
data2 <- data_row[ with (data_row, { !(is.na(steps)) } ), ]
data_row <- read.csv('activity.csv')
data2 <- data_row[ with (data_row, { !(is.na(steps)) } ), ]
totSteps2 <- tapply(data2$steps, data2$date, sum)
totSteps2
totSteps1
totSteps
totSteps - totSteps2
totSteps[!is.na(totSteps)] - totSteps2[!is.na(totSteps)]
sum(totSteps[!is.na(totSteps)] - totSteps2[!is.na(totSteps)])
by_day <- group_by(data, date)
?group_by
library(dplyr)
by_day <- group_by(data, date)
View(by_day)
steps_by_day <- summarise(by_day, total=sum(steps))
steps_by_day
steps_by_day$total
totSteps
totSteps-steps_by_day
totSteps[1:61]
as.list(totSteps)
as.numeric(totSteps)
totSteps <- as.numeric(totSteps)
steps_by_day
totSteps
steps_by_day$total
steps_by_day$total-totSteps
summary(steps_by_day)
summary(totSteps)
?median
median(totSteps)
totSteps <- tapply(data$steps, data$date, sum, na.rm = TRUE)
median(totSteps)
summary(totSteps)
?weekdays
actDay <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
actDay
names(actDay)
max(actDay)
which.max(actDay)
which.max(actDay)[2]
names(which.max(actDay))
is.na(data)
Colsum(is.na(data))
csum(is.na(data))
?colsum
?sumcol
?sum
actDay[835]
actDay['835']
steps_mod <- data$steps
for i in seq_along(steps_mod){
if is.na(steps_mod[i]){
interval <- as.character(data$interval[i])
steps_mod[i] <- actDay[interval]
}
}
for i in seq_along(steps_mod){}
for i in seq_along(steps_mod){}
for i in seq_along(steps_mod){
}
for (i in seq_along(steps_mod)){
if is.na(steps_mod[i]){
interval <- as.character(data$interval[i])
steps_mod[i] <- actDay[interval]
}
}
for(i in seq_along(steps_mod)){
}
for(i in seq_along(steps_mod)){
if is.na(steps_mod[i]){
interval <- as.character(data$interval[i])
steps_mod[i] <- actDay[interval]
}
}
for(i in seq_along(steps_mod)){
if(is.na(steps_mod[i])){
interval <- as.character(data$interval[i])
steps_mod[i] <- actDay[interval]
}
}
actDay('0')
actDay['0']
actDay['5']
actDay['2']
?data.frame
data_mod <- data.frame(steps_mod, data$date, data$interval)
View(data_mod)
names(data_mod) <- c("steps","date","interval")
View(data_mod)
?na.rm
?mean
x <- c(1,2,3,NA)
mean(x)
mean(x,na.rm=T)
missing <- is.na(data$steps)
table(data$interval[missing])
table(data$date[missing])
288*5/60
60*24
x <- c(1,2,3,NA)
median(x)
median(x, na.rm = T)
median(x, na.rm = T)
mean(x, na.rm = T)
x_mod <- c(1,2,3,2)
mean(x_mod, na.rm = T)
mean(x_median, na.rm = T)
median(x_mod, na.rm = T)
data$date <- ymd(data$date)
?ymd
??ymd
library(lubridate)
?ymd
?floor
?hms
?paste
hours = as.character(floor(data$interval/100))
minutes = as.character(data$interval - hours)
data$time <- hm(paste(hours,minutes), sep=":")
floor(data$interval/100)
as.character(floor(data$interval/100))
hours <- floor(data$interval/100))
minutes <- as.character(data$interval - hours)
hours <- as.character(hours)
data$time <- hm(paste(hours,minutes), sep=":")
hours <- floor(data$interval/100)
minutes <- as.character(data$interval - hours)
hours <- as.character(hours)
data$time <- hm(paste(hours,minutes), sep=":")
len(hours)
lenght(hours)
length(hours)
length(minutes)
paste(hours,minutes)
hours <- floor(data$interval/100)
minutes <- as.character(data$interval - hours*100)
hours <- as.character(hours)
data$time <- hm(paste(hours,minutes), sep=":")
paste(hours, minutes)
len(paste(hours, minutes))
length(paste(hours, minutes))
length(paste(hours, minutes), sep=":")
hours <- floor(data$interval/100)
minutes <- as.character(data$interval - hours*100)
hours <- as.character(hours)
data$time <- hm(paste(hours,minutes, sep=":"))
View(data)
paste(hours,minutes, sep=":")
?hm
times <- paste(hours,minutes, sep=":")
times[1:5]
hm(times[1:5])
hm(times)
hours <- floor(data$interval/100)
minutes <- as.character(data$interval - hours*100)
hours <- as.character(hours)
times <- paste(hours,minutes, sep=":")
data$time <- hm(times)
head(times,20)
head(data$time,20)
View(data)
head(data$time)
actDay <- tapply(data$steps, data$time, mean, na.rm = TRUE)
summary(data$time)
as.factor(data$time)
as.character(data$time)
actDay <- tapply(data$steps, as.character(data$time), mean, na.rm = TRUE)
hours <- floor(data$interval/100)
minutes <- as.character(data$interval - hours*100)
hours <- as.character(hours)
times <- paste(hours,minutes, sep=":")
data$time <- as.character(hm(times))
View(data)
hours <- floor(data$interval/100)
data$time <- data$interval - hours*100 + hours*60
View(data)
steps_mod <- data$steps
for(i in seq_along(steps_mod)){
if(is.na(steps_mod[i])){
interval <- as.character(data$interval[i])
steps_mod[i] <- round(actDay[interval])
}
}
data_mod <- data.frame(steps_mod, data$date, data$interval, data$time)
names(data_mod) <- c("steps","date","interval","time")
View(data_mod)
View(data_mod)
steps_mod
data$stpes
data$steps
data$steps-steps_mod
len(steps_mod)
length(steps_mod)
steps_mod <- data$steps
for(i in seq_along(steps_mod)){
if(is.na(steps_mod[i])){
interval <- as.character(data$time[i])
steps_mod[i] <- round(actDay[interval])
}
}
data_mod <- data.frame(steps_mod, data$date, data$interval, data$time)
names(data_mod) <- c("steps","date","interval","time")
View(data_mod)
steps_mod
steps_mod[1]
data$time[1]
actDay['0']
actDau
actDay
unique(data$interval[data$time==no_interval])
ls
ls(rm=ls())
swirl
swirl()
library(swirl)
rm(list=ls())
library(knitr)
library(lubridate)
data <- read.csv('./activity.csv', na.strings = 'NA',
colClasses = c('numeric','character','numeric'))
data$date <- ymd(data$date)
hours <- floor(data$interval/100)
totSteps <- tapply(data$steps, data$date, sum, na.rm = TRUE)
hist(totSteps, xlab = "Total number of steps",
main = "Histogram of the total number of steps")
actDay <- tapply(data$steps, data$time, mean, na.rm = TRUE)
plot(names(actDay), actDay, type = 'l', xlab = 'Number of minutes passed since midnight',
ylab = 'Average number of steps', main = 'Average daily activity pattern')
len(data$steps)
length(data$steps)
length(data$time)
hours <- floor(data$interval/100)
data$time <- data$interval - hours*100 + hours*60
actDay <- tapply(data$steps, data$time, mean, na.rm = TRUE)
plot(names(actDay), actDay, type = 'l', xlab = 'Number of minutes passed since midnight',
ylab = 'Average number of steps', main = 'Average daily activity pattern')
no_interval <- as.numeric(names(which.max(actDay)))
print(no_interval)
unique(data$interval[data$time==no_interval])
steps_mod <- data$steps
for(i in seq_along(steps_mod)){
if(is.na(steps_mod[i])){
interval <- as.character(data$time[i])
steps_mod[i] <- round(actDay[interval])
}
}
data_mod <- data.frame(steps_mod, data$date, data$interval, data$time)
names(data_mod) <- c("steps","date","interval","time")
totSteps_mod <- tapply(data_mod$steps, data_mod$date, sum, na.rm = TRUE)
hist(totSteps_mod, xlab = "Total number of steps",
main = "Histogram of the total number of steps (w/o NA's)")
mean(totSteps_mod)
median(totSteps_mod)
totSteps
mean(totSteps)
mean(totSteps,na.rm=T)
mean(totSteps_mod,na.rm=T)
View(data)
totSteps3 <- totSteps[totSteps!=0]
mean(totSteps3)
?weekdays
time = time()
time <- now()
weekday(now)
time <- now
now
time <- Sys.time()
time
weekday(time)
weekdays(time)
days <- weekday(data_mod$date)
days <- weekdays(data_mod$date)
data_mod$weekend <- days == "Saturday" | days == "Sunday"
View(data_mod)
sum(data_mod$weekend)
len(data_mod$weekend)-sum(data_mod$weekend)
length(data_mod$weekend)-sum(data_mod$weekend)
days <- weekdays(data_mod$date)
data_mod$weekend <- ifelse(days == 'Saturday' | days == 'Sunday', 'weekend', 'weekday')
View(data)
View(data_mod)
avWeek <- tapply(data$steps, data$weekend, mean, na.rm = TRUE)
avWeek <- tapply(data$steps, data$weekend, mean, na.rm = TRUE)
avWeek <- tapply(data_mod$steps, data_mod$weekend, mean, na.rm = TRUE)
avWeek
avWeek <- tapply(data_mod$steps, c(data_mod$time,data_mod$weekend), mean, na.rm = TRUE)
?tapply
avWeek <- tapply(data_mod$steps, list(data_mod$time,data_mod$weekend), mean, na.rm = TRUE)
avWeek
avWeek2 <- as.dataframe(avWeek)
avWeek2 <- as.table(avWeek)
View(avWeek)
?rep
rep(c('a','b','c'),2)
avWeek[, 1]
avWeek[, 2]
names(avWeek)
names(avWeek2)
names(avWeek)
colnames(avWeek)
avWeek_df <- data.frame(as.numeric(rep(names(avWeek),2)))
avWeek_df$mean <- c(avWeek[,1], avWeek[,2])
avWeek_df$weekend <- rep(colnames(avWeek),each=length(avWeek[,1]))
c(avWeek[,1], avWeek[,2])
length(c(avWeek[,1], avWeek[,2]))
avWeek <- tapply(data_mod$steps, list(data_mod$time,data_mod$weekend), mean, na.rm = TRUE)
avWeek_df <- data.frame(as.numeric(rep(rownames(avWeek),2)))
avWeek_df$mean <- c(avWeek[,1], avWeek[,2])
avWeek_df$weekend <- rep(colnames(avWeek),each=length(avWeek[,1]))
View(avWeek_df)
avWeek <- tapply(data_mod$steps, list(data_mod$time,data_mod$weekend), mean, na.rm = TRUE)
avWeek_df <- data.frame(as.numeric(rep(rownames(avWeek),2)))
avWeek_df$mean <- as.numeric(c(avWeek[,1], avWeek[,2]))
avWeek_df$weekend <- as.factor(rep(colnames(avWeek),each=length(avWeek[,1])))
names(avWeek_df)[1] <- 'time'
View(avWeek_df)
?qplot
library(ggplot2)
?qplot
View(avWeek_df)
